(use 'i-am-a-horse-in-the-land-of-booleans)
(boolean "x")
(boolean nil)
quit
use ('i-am-a-horse-in-the-land-of-booleans)
(use 'i-am-a-horse-in-the-land-of-booleans)
(boolean x)
(boolean "x")
(boolean "mies")
(boolean "false")
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(teen? 15)
(teen? 13()
(teen? 13();
:
;
(teen? 13)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(teen? 15)
(teen? 11)
(teen? 18)
(teen? 12)
(teen? 13)
(teen? 14)
(teen? 19)
(teen? 20)
(teen? 14)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(teen? 20)
(teen? 19)
(teen? 12)
(teen? 13)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(abs 13)
(abs -2)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 10 5)
(divides? 5 10)
(divides? 2 4)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 2 4)
(divides? 4 4)
(divides? 5 4)
(divides? 3 2)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 3 2)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 3 2)
(divides? 1 2)
(divides? 1 1)
(divides? 0 1)
(divides? 0 0)
(divides? 1 0)
(divides? 1 2)
(divides? 2 3)
(divides? 4 2)
(mod 4 2)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(mod 4 2)
(divides? 4 2)
(divides? 2 4)
(mod 4 2)
(mod 2 4)
(mod 10 5)
(if 0 10 5)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 4 2)
(divides? 2 4)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 2 4)
(divides? 4 4)
(divides? 1 4)
(divides? 6 4)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(divides? 6 4)
(divides? 1 4)
(divides? 2 4)
(divides? 4 2)
(divides? 5 10)
(divides? 2 5)
(divides? 3 6)
(divides? 3 7)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(fizzbuzz 2)
(fizzbuzz 45)
(fizzbuzz 48)
(fizzbuzz 70)
(fizzbuzz 45)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(fizzbuzz 45)
(fizzbuzz 48)
(fizzbuzz 70)
(fizzbuzz 2)
(or true false)
(or false false)
(or false true)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(generic-doublificate 1)
(generic-doublificate [1 2])
(generic-doublificate )
(generic-doublificate '(65 21))
(generic-doublificate {}])
(generic-doublificate {})
(generic-doublificate [])
(generic-doublificate {:a 1})
(and "foo" "bar")
(and false "bar")
(and true "bar")
(and "bar" true)
(if [])
(if [] true false)
(if nil true false)
(=Â [])
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(not-teen? 15)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(not-teen? 15)
(not-teen? 20)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(leap-year? 100)
(leap-year? 200)
(leap-year? 5643)
(leap-year? 12)
(leap-year? 15)
(divides? 4 100)
(divides? 4 200)
(divides? 4 500)
(divides? 4 12313)
(divides? 4 400)
(divides? 400 4)
(divides? 200 4)
(divides? 100 4)
(divides? 4 100)
(divides? 4 200)
(divides? 4 400)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(leap-year? 15)
(leap-year? 4)
(leap-year? 100)
(leap-year? 200)
(leap-year? 400)
(divides? 100 100)
(divides? 4 100)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(leap-year? 400)
(leap-year? 100)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(leap-year? 100)
(leap-year? 400)
(use 'i-am-a-horse-in-the-land-of-booleans :reload)
(leap-year? 400)
(leap-year? 200)
(leap-year? 100)
(leap-year? 20)
(leap-year? 12)
(leap-year? 15)
