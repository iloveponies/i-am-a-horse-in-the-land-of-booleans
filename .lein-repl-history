(boolean 2)
(use 'i-am-a-horse-in-the-land-of-booleans)
(boolean 5)
(use 'i-am-a-horse-in-the-land-of-booleans)
(boolean 5)
exit
(boolean 5)
(defn boolean [x]
(if (x? "nil")
 "false")
(if (x? "false")
 "false")
("true")
))
(def x "moi")
(if (x? "moi")("juu")("ei"))
x
(if x "moi" "juu")
(if x "on" "juu")
(defn boolean [x] (if x "true" "false"))
(boolean "moi")
(defn boolean [x] (if x true false))
(boolean 2)
(= 5.0 5.1)
(= 5.0 5.0)
(== 5.0 5)
(defn teen? [age] (<= 13 age 19))
(teen 14)
(teen? 14)
(teen? 12)
(teen? 19)
(teen? 20)
(defn abs [n] (if (< n 0) (- n) n))
(abs -2)
(abs 42)
(if 0 "juu" "ei")
(mod 5 2)
if (mod 5 2)
(if (mod 5 2) "juu" "ei")
(if (== (mod 6 2) 0) "juu" "ei")
(if (== (mod 6 5) 0) "juu" "ei")
(defn divides? [divisor n] (if (== (mod n divisor) 0) true false))
(divides? 2 4)
(divides? 4 2)
(defn divides [divisor n] (if (== (mod n divisor) 0) true false))
(divides 4 2)
(divides 2 4)
(pos? 2)
(neg? 2)
(divides? 5 2)
(divides? 6 2)
(defn divides? [divisor n] (if (== (mod n divisor) 0) true false))
(divides? 5 1)
(divides? 1 5)
(divides? 2 6)
(divides? 2 7)
(defn fizzbuzz [n] (cond (divides? 15 n) "gotcha!" (divides? 3 n) "fizz" (divides? 5 n) "buzz"))
(fizzbuzz 6)
(defn fizzbuzz [n] (cond (divides? 15 n) "gotcha!" (divides? 3 n) "fizz" (divides? 5 n) "buzz" :else ""))
(fizzbuzz 2)
(fizzbuzz 45)
(fizzbuzz 48)
(fizzbuzz 70)
(defn generic-doublificate [x] (cond 
(number? x) (* x 2)
(if (empty? coll) nil true)
:else true)
)
(defn generic-doublificate [x] (cond 
(number? x) (* x 2)
:else true))
(generic-doublificate 1)
(defn generic-doublificate [x] (cond 
(number? x) (* x 2)
(empty? coll) nil
:else true))
(defn generic-doublificate [x] (cond 
(number? x) (* x 2)
(empty? x) nil
:else true))
(generic-doublificate [])
(defn generic-doublificate [x] (cond 
(number? x) (* x 2)
(empty? x) nil
(list? x) (* 2 (count x))
(vector? x) (* 2 (count x))
else: true))
(defn generic-doublificate [x] (cond 
(number? x) (* x 2)
(empty? x) nil
(list? x) (* 2 (count x))
(vector? x) (* 2 (count x))
:else true))
(generic-doublificate 1)
(generic-doublificate [1 2])
(generic-doublificate '(65 21))
(generic-doublificate {})
(generic-doublificate {:a 1})
