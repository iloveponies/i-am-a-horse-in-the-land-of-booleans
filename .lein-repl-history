(if 1 "hi" "not hi")
(if 1 
(+ 1 2)
(* 2 3))
(if nil "Hi" "Not hi")
(boolean false)
(boolean null)
(boolean "null")
(boolean nill)
(boolean nil)
(use 'i-am-a-horse-in-the-land-of-booleans)
(boolean "Hi")
(boolean nil)
(= "Hi" "Hi")
(== "Hi" "Hi")
(== 5.0 5
)
(= 5.0 5)
(< "Hi" "No")
(== 1 1 1 )
(== 1 1 2 )
(== 4 (*2 2) (+ 2 2) )
(== 4 (* 2 2) (+ 2 2))
(use 'i-am-a-horse-in-the-land-of-booleans)
(teen? 12)
(teen? 13)
(teen? 14)
(teen? 19)
(teen? 20)
(defn sign [x]
(if (< x 0) "-" "+"))
(sign 10)
(sign )
(sign 0)
(sign -2)
(use 'i-am-a-horse-in-the-land-of-booleans)
(abs -19)
(abs 19)
(abs 0)
(abs -0)
(mod 10 5)
(mod 5 10)
(mod 5 3)
(/ 5 3)
(/ 5.0 3)
(% 5.0 3)
(% 5 3)
(// 5 3)
(divides? 5 10)
(use 'i-am-a-horse-in-the-land-of-booleans)
(divides? 5 10)
(divides? 15 3)
(divides? 0 15)
(defn super-sign [x]
( cond
(neg? x "negative"
(defn super-sign [x]
(conf
(defn super-sign [x]
(cond
(neg? x) "negative"
(pos? x) "positive"
:else    "zero"
)
(super-sign 12)
(super-sign -12)
(super-sign 0)
(use 'i-am-a-horse-in-the-land-of-booleans)
(fizzbuzz 45)
(fizzbuzz 5)
(fizzbuzz 3)
(use 'i-am-a-horse-in-the-land-of-booleans)
(fizzbuzz 45)
(fizzbuzz 3)
(use 'i-am-a-horse-in-the-land-of-booleans)
(fizzbuzz 3)
(fizzbuzz 45)
(fizzbuzz 5)
